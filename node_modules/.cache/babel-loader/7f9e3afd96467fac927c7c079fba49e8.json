{"ast":null,"code":"var _jsxFileName = \"/Users/asadali/WebstormProjects/reactinterface/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BiArchive } from \"react-icons/bi\";\nimport Search from './components/Search';\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [appointmentList, setAppointmentList] = useState([]);\n  const fetchData = useCallback(() => {\n    fetch('./data.json').then(response => response.json()).then(data => {\n      setAppointmentList(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // tracking the data any change it comes data  And this is how you would actually work with a traditional API.\n  // So if the data changes for some reason, useEffect we'll keep track of it and update our application automatically.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container mx-auto mt-3 font-thin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl\",\n      children: [/*#__PURE__*/_jsxDEV(BiArchive, {\n        className: \"inline-block text-blue-800 align-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), \"Your Appointments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddAppointment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"divide-y divide-gray-200\",\n      children: appointmentList.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentInfo, {\n        petName: appointment.petName,\n        aptDate: appointment.aptDate,\n        ownerName: appointment.ownerName,\n        aptNotes: appointment.aptNotes,\n        id: appointment.id,\n        onDeleteAppointment: appointmentId => console.log(appointmentId)\n      }, appointment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"hBpNgTvbgu6+iZeUg9q4eLEA8gA=\");\n\n_c = App;\nconst words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\nconst result = words.filter(word => {\n  if (word === \"elite\") {\n    console.log('is  found');\n  }\n});\nconsole.log(result);\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BiArchive","Search","AddAppointment","AppointmentInfo","useCallback","useEffect","useState","App","appointmentList","setAppointmentList","fetchData","fetch","then","response","json","data","map","appointment","petName","aptDate","ownerName","aptNotes","id","appointmentId","console","log","words","result","filter","word"],"sources":["/Users/asadali/WebstormProjects/reactinterface/src/App.js"],"sourcesContent":["\nimport {BiArchive} from \"react-icons/bi\";\nimport Search from './components/Search'\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\nimport {useCallback, useEffect, useState} from \"react\";\n\nfunction App() {\n\n\n\n    let [appointmentList, setAppointmentList] = useState([]);\n\n    const fetchData = useCallback(() => {\n        fetch('./data.json')\n            .then(response => response.json())\n            .then(data => {\n                setAppointmentList(data)\n            });\n    }, [])\n\n    useEffect(() => {\n        fetchData()\n    }, [fetchData]);\n\n\n    // tracking the data any change it comes data  And this is how you would actually work with a traditional API.\n   // So if the data changes for some reason, useEffect we'll keep track of it and update our application automatically.\n\n    return (\n        <div className=\"App container mx-auto mt-3 font-thin\">\n            <h1 className=\"text-5xl\">\n                <BiArchive className=\"inline-block text-blue-800 align-top\"/>\n                Your Appointments\n            </h1>\n\n            <AddAppointment/>\n\n            <Search/>\n            <ul className=\"divide-y divide-gray-200\">\n                {\n                    appointmentList.map( (appointment) => (\n                        <AppointmentInfo\n                            key ={appointment.id}\n                            petName={appointment.petName}\n                            aptDate = {appointment.aptDate}\n                            ownerName = {appointment.ownerName}\n                            aptNotes = {appointment.aptNotes}\n                            id = { appointment.id }\n                            onDeleteAppointment={\n                                (appointmentId) => console.log(appointmentId)\n\n                            }\n                        />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n}\nconst words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];\n\nconst result = words.filter((word) => {\n    if (word=== \"elite\")\n    {\n        console.log('is  found')\n\n    }\n});\n\nconsole.log(result);\n\nexport default App;\n"],"mappings":";;;AACA,SAAQA,SAAR,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAIX,IAAI,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCH,QAAQ,CAAC,EAAD,CAApD;EAEA,MAAMI,SAAS,GAAGN,WAAW,CAAC,MAAM;IAChCO,KAAK,CAAC,aAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;MACVN,kBAAkB,CAACM,IAAD,CAAlB;IACH,CAJL;EAKH,CAN4B,EAM1B,EAN0B,CAA7B;EAQAV,SAAS,CAAC,MAAM;IACZK,SAAS;EACZ,CAFQ,EAEN,CAACA,SAAD,CAFM,CAAT,CAdW,CAmBX;EACD;;EAEC,oBACI;IAAK,SAAS,EAAC,sCAAf;IAAA,wBACI;MAAI,SAAS,EAAC,UAAd;MAAA,wBACI,QAAC,SAAD;QAAW,SAAS,EAAC;MAArB;QAAA;QAAA;QAAA;MAAA,QADJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QANJ,eAQI,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QARJ,eASI;MAAI,SAAS,EAAC,0BAAd;MAAA,UAEQF,eAAe,CAACQ,GAAhB,CAAsBC,WAAD,iBACjB,QAAC,eAAD;QAEI,OAAO,EAAEA,WAAW,CAACC,OAFzB;QAGI,OAAO,EAAID,WAAW,CAACE,OAH3B;QAII,SAAS,EAAIF,WAAW,CAACG,SAJ7B;QAKI,QAAQ,EAAIH,WAAW,CAACI,QAL5B;QAMI,EAAE,EAAKJ,WAAW,CAACK,EANvB;QAOI,mBAAmB,EACdC,aAAD,IAAmBC,OAAO,CAACC,GAAR,CAAYF,aAAZ;MAR3B,GACUN,WAAW,CAACK,EADtB;QAAA;QAAA;QAAA;MAAA,QADJ;IAFR;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA8BH;;GApDQf,G;;KAAAA,G;AAqDT,MAAMmB,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,WAA5B,EAAyC,aAAzC,EAAwD,SAAxD,CAAd;AAEA,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAU;EAClC,IAAIA,IAAI,KAAI,OAAZ,EACA;IACIL,OAAO,CAACC,GAAR,CAAY,WAAZ;EAEH;AACJ,CANc,CAAf;AAQAD,OAAO,CAACC,GAAR,CAAYE,MAAZ;AAEA,eAAepB,GAAf"},"metadata":{},"sourceType":"module"}