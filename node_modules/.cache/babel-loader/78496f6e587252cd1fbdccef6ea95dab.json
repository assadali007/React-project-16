{"ast":null,"code":"var _jsxFileName = \"/Users/asadali/WebstormProjects/reactinterface/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BiArchive } from \"react-icons/bi\";\nimport Search from './components/Search';\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [appointmentList, setAppointmentList] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  let [sortBy, setSortBy] = useState(\"petName\");\n  let [orderBy, setOrderBy] = useState(\"asc\");\n  const filteredAppointments = appointmentList.filter(item => item.petName.toLowerCase().includes(query.toLowerCase()) || item.ownerName.toLowerCase().includes(query.toLowerCase()) || item.aptNotes.toLowerCase().includes(query.toLowerCase())).sort((a, b) => {\n    let order = orderBy === 'asc' ? 1 : -1;\n    return a[sortBy].toLowerCase() < b[sortBy].toLowerCase() ? -1 * order : 1 * order;\n  });\n  const fetchData = useCallback(() => {\n    fetch('./data.json').then(response => response.json()).then(data => {\n      setAppointmentList(data);\n    });\n  }, []); // tracking the data any change it comes data  And this is how you would actually work with a traditional API.\n  // So if the data changes for some reason, useEffect we'll keep track of it and update our application automatically.\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container mx-auto mt-3 font-thin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl\",\n      children: [/*#__PURE__*/_jsxDEV(BiArchive, {\n        className: \"inline-block text-blue-800 align-top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), \"Your Appointments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddAppointment\n    /*  take the current appointment list and pass along my appointment it almost like push like add something in the\n    *  current array */\n    , {\n      onSendAppointment: myAppointment => setAppointmentList([...appointmentList, myAppointment]),\n      lastId: appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      query: query,\n      onQueryChange: myQuery => setQuery(myQuery),\n      orderBy: orderBy,\n      onOrderByChange: mySort => setOrderBy(mySort),\n      sortBy: sortBy,\n      onSortByChange: mySort => setSortBy(mySort)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"divide-y divide-gray-200\",\n      children: filteredAppointments.map(appointment => /*#__PURE__*/_jsxDEV(AppointmentInfo, {\n        petName: appointment.petName,\n        aptDate: appointment.aptDate,\n        ownerName: appointment.ownerName,\n        aptNotes: appointment.aptNotes,\n        id: appointment.id,\n        onDeleteAppointment: appointmentId => // 1\n        setAppointmentList(appointmentList.filter(appointment => // return the value that not equal to when a button is click\n        appointment.id !== appointmentId // 1\n        ))\n      }, appointment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"u0+7Dzkwdj1clGMhzKadHx5iza0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BiArchive","Search","AddAppointment","AppointmentInfo","useCallback","useEffect","useState","App","appointmentList","setAppointmentList","query","setQuery","sortBy","setSortBy","orderBy","setOrderBy","filteredAppointments","filter","item","petName","toLowerCase","includes","ownerName","aptNotes","sort","a","b","order","fetchData","fetch","then","response","json","data","myAppointment","reduce","max","Number","id","myQuery","mySort","map","appointment","aptDate","appointmentId"],"sources":["/Users/asadali/WebstormProjects/reactinterface/src/App.js"],"sourcesContent":["\nimport {BiArchive} from \"react-icons/bi\";\nimport Search from './components/Search'\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\nimport {useCallback, useEffect, useState} from \"react\";\n\nfunction App() {\n\n    let [appointmentList, setAppointmentList] = useState([]);\n    const [query,setQuery] = useState(\"\")\n\n    let [sortBy,setSortBy] = useState(\"petName\");\n    let [orderBy,setOrderBy] = useState(\"asc\");\n\n\n\n    const filteredAppointments = appointmentList.filter( (item) =>\n        (\n                item.petName.toLowerCase().includes(query.toLowerCase()) ||\n                item.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n                item.aptNotes.toLowerCase().includes(query.toLowerCase())\n        )\n\n    ).sort((a, b) => {\n        let order = (orderBy === 'asc') ? 1 : -1;\n        return (\n            a[sortBy].toLowerCase() < b[sortBy].toLowerCase()\n                ? -1 * order : 1 * order\n        )\n    })\n\n\n\n\n    const fetchData = useCallback(() => {\n        fetch('./data.json')\n            .then(response => response.json())\n            .then(data => {\n                setAppointmentList(data)\n            });\n    }, [])\n\n    // tracking the data any change it comes data  And this is how you would actually work with a traditional API.\n    // So if the data changes for some reason, useEffect we'll keep track of it and update our application automatically.\n    useEffect(() => {\n        fetchData()\n    }, [fetchData]);\n\n\n\n\n    return (\n        <div className=\"App container mx-auto mt-3 font-thin\">\n            <h1 className=\"text-5xl\">\n                <BiArchive className=\"inline-block text-blue-800 align-top\"/>\n                Your Appointments\n            </h1>\n\n            <AddAppointment\n\n                /*  take the current appointment list and pass along my appointment it almost like push like add something in the\n                *  current array */\n                onSendAppointment={ (myAppointment => setAppointmentList([...appointmentList,myAppointment]))}\n                lastId = {appointmentList.reduce((max,item) =>\n                    Number(item.id) > max ? Number(item.id) : max,0 )}\n            />\n\n            <Search query={query}\n                    onQueryChange={myQuery => setQuery(myQuery)}\n\n\n                    orderBy={orderBy}\n                    onOrderByChange={ mySort => setOrderBy(mySort)}\n                    sortBy={sortBy}\n                    onSortByChange={mySort => setSortBy(mySort)}\n            />\n\n\n\n\n            <ul className=\"divide-y divide-gray-200\">\n                {\n                    filteredAppointments.map( (appointment) => (\n                        <AppointmentInfo\n                            key ={appointment.id}\n                            petName={appointment.petName}\n                            aptDate = {appointment.aptDate}\n                            ownerName = {appointment.ownerName}\n                            aptNotes = {appointment.aptNotes}\n                            id = { appointment.id }\n                            onDeleteAppointment={\n                                (appointmentId) => // 1\n                                    setAppointmentList(appointmentList.filter((appointment) =>\n                                        // return the value that not equal to when a button is click\n                                     appointment.id !== appointmentId // 1\n                                    ))\n\n                            }\n                        />\n                    ))\n                }\n            </ul>\n        </div>\n    );\n}\n\n\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}